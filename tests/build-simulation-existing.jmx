<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${__P(loops, )}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(builders, )}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1457042475000</longProp>
        <longProp name="ThreadGroup.end_time">1457042475000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Property to Variable Init" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">import java.io.File

vars.put(&quot;hostname&quot;, System.getProperty(&quot;hostname&quot;))
vars.put(&quot;port&quot;, System.getProperty(&quot;port&quot;))
vars.put(&quot;inputDir&quot;, System.getProperty(&quot;inputDir&quot;))
vars.put(&quot;downloadDir&quot;, System.getProperty(&quot;downloadDir&quot;))

new File( vars.get(&quot;downloadDir&quot;) ).mkdirs()
</stringProp>
        </JSR223Sampler>
        <hashTree>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">prev.setIgnore();</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">0</stringProp>
          <stringProp name="RandomTimer.range">100</stringProp>
        </UniformRandomTimer>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">true</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Build Setup" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">import java.io.File
import groovy.json.JsonSlurper

def rand = new Random();
def buildNumber = Math.abs(rand.nextInt()) % 2386

vars.put( &quot;repoCounter&quot;, Long.toString(System.currentTimeMillis()) + &apos;-&apos; + buildNumber );

new File(vars.get(&quot;downloadDir&quot;), vars.get(&quot;repoCounter&quot;)).mkdirs()

def inputDir = System.getProperty(&quot;inputDir&quot;)

def counter=1
def build = new JsonSlurper().parse(new File(&quot;${inputDir}/build-data/build-${buildNumber}.json&quot;))

build.downloads.each{path-&gt;
  vars.put(&quot;download_${counter}&quot;, path)
  counter++
}

counter=1
build.uploadCoords.each{coord-&gt;
  vars.put(&quot;upload_${counter}&quot;, coord)
  counter++
}</stringProp>
        </JSR223Sampler>
        <hashTree>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">prev.setIgnore();</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="add build hosted repo" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;type&quot; : &quot;hosted&quot;,&#xd;
  &quot;key&quot; : &quot;maven:hosted:test-${repoCounter}&quot;,&#xd;
  &quot;disabled&quot; : false,&#xd;
  &quot;snapshotTimeoutSeconds&quot; : 86400,&#xd;
  &quot;doctype&quot; : &quot;hosted&quot;,&#xd;
  &quot;name&quot; : &quot;test-${repoCounter}&quot;,&#xd;
  &quot;allow_snapshots&quot; : true,&#xd;
  &quot;allow_releases&quot; : true&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/admin/stores/maven/hosted</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="Preperation Prometheus Listener" enabled="true">
          <collectionProp name="prometheus.collector_definitions">
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">Measuring response time of create a hosted repo</stringProp>
              <stringProp name="collector.metric_name">indy_others_rt_hist</stringProp>
              <stringProp name="collector.type">HISTOGRAM</stringProp>
              <collectionProp name="collector.labels">
                <stringProp name="102727412">label</stringProp>
                <stringProp name="50511102">category</stringProp>
              </collectionProp>
              <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
              <stringProp name="listener.collector.listen_to">samples</stringProp>
              <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
            </elementProp>
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">default help string</stringProp>
              <stringProp name="collector.metric_name">indy_others_rt_summary</stringProp>
              <stringProp name="collector.type">SUMMARY</stringProp>
              <collectionProp name="collector.labels"/>
              <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
            </elementProp>
          </collectionProp>
        </com.github.johrstrom.listener.PrometheusListener>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="add build group" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;type&quot; : &quot;group&quot;,&#xd;
  &quot;key&quot; : &quot;maven:group:test-${repoCounter}&quot;,&#xd;
  &quot;disabled&quot; : false,&#xd;
  &quot;doctype&quot; : &quot;group&quot;,&#xd;
  &quot;name&quot; : &quot;test-${repoCounter}&quot;,&#xd;
  &quot;constituents&quot;:[&#xd;
    &quot;hosted:test-${repoCounter}&quot;,&#xd;
    &quot;group:public&quot;&#xd;
  ]&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/admin/stores/maven/group</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Download files" enabled="true">
          <stringProp name="ForeachController.inputVal">download</stringProp>
          <stringProp name="ForeachController.returnVal">path</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
        </ForeachController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download Build Dependency" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/folo/track/test-${repoCounter}/group/test-${repoCounter}/${path}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="Download Prometheus Listener" enabled="true">
              <collectionProp name="prometheus.collector_definitions">
                <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                  <stringProp name="collector.help">measuring indy response time of download artifact</stringProp>
                  <stringProp name="collector.metric_name">indy_dl_rt_hist</stringProp>
                  <stringProp name="collector.type">HISTOGRAM</stringProp>
                  <collectionProp name="collector.labels">
                    <stringProp name="102727412">label</stringProp>
                  </collectionProp>
                  <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
                  <stringProp name="listener.collector.listen_to">samples</stringProp>
                  <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
                </elementProp>
                <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                  <stringProp name="collector.help">meaturing indy success response ratio</stringProp>
                  <stringProp name="collector.metric_name">indy_dl_response_success_ratio</stringProp>
                  <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
                  <collectionProp name="collector.labels">
                    <stringProp name="102727412">label</stringProp>
                  </collectionProp>
                  <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
                  <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
                  <stringProp name="listener.collector.listen_to">samples</stringProp>
                </elementProp>
                <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                  <stringProp name="collector.help">indy total number of success request a artifact</stringProp>
                  <stringProp name="collector.metric_name">indy_dl_success_total</stringProp>
                  <stringProp name="collector.type">COUNTER</stringProp>
                  <collectionProp name="collector.labels">
                    <stringProp name="102727412">label</stringProp>
                  </collectionProp>
                  <stringProp name="collector.quantiles_or_buckets"></stringProp>
                  <stringProp name="listener.collector.measuring">SuccessTotal</stringProp>
                </elementProp>
                <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                  <stringProp name="collector.help">default help string</stringProp>
                  <stringProp name="collector.metric_name">indy_dl_rt_summary</stringProp>
                  <stringProp name="collector.type">SUMMARY</stringProp>
                  <collectionProp name="collector.labels">
                    <stringProp name="102727412">label</stringProp>
                  </collectionProp>
                  <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
                  <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
                </elementProp>
                <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                  <stringProp name="collector.help">default help string</stringProp>
                  <stringProp name="collector.metric_name">indy_dl_latency</stringProp>
                  <stringProp name="collector.type">HISTOGRAM</stringProp>
                  <collectionProp name="collector.labels">
                    <stringProp name="102727412">label</stringProp>
                  </collectionProp>
                  <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
                  <stringProp name="listener.collector.measuring">Latency</stringProp>
                </elementProp>
                <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                  <stringProp name="collector.help">default help string</stringProp>
                  <stringProp name="collector.metric_name">indy_dl_count_total</stringProp>
                  <stringProp name="collector.type">COUNTER</stringProp>
                  <collectionProp name="collector.labels">
                    <stringProp name="102727412">label</stringProp>
                  </collectionProp>
                  <stringProp name="collector.quantiles_or_buckets"></stringProp>
                  <stringProp name="listener.collector.listen_to">samples</stringProp>
                  <stringProp name="listener.collector.measuring">CountTotal</stringProp>
                </elementProp>
                <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                  <stringProp name="collector.help">default help string</stringProp>
                  <stringProp name="collector.metric_name">indy_dl_response_size</stringProp>
                  <stringProp name="collector.type">HISTOGRAM</stringProp>
                  <collectionProp name="collector.labels">
                    <stringProp name="102727412">label</stringProp>
                  </collectionProp>
                  <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
                  <stringProp name="listener.collector.measuring">ResponseSize</stringProp>
                </elementProp>
                <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                  <stringProp name="collector.help">default help string</stringProp>
                  <stringProp name="collector.metric_name">indy_dl_idle_time</stringProp>
                  <stringProp name="collector.type">SUMMARY</stringProp>
                  <collectionProp name="collector.labels">
                    <stringProp name="102727412">label</stringProp>
                  </collectionProp>
                  <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
                  <stringProp name="listener.collector.measuring">IdleTime</stringProp>
                </elementProp>
              </collectionProp>
            </com.github.johrstrom.listener.PrometheusListener>
            <hashTree/>
            <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Responses to a file" enabled="true">
              <stringProp name="FileSaver.filename">${downloadDir}/${repoCounter}/${path}</stringProp>
              <boolProp name="FileSaver.errorsonly">false</boolProp>
              <boolProp name="FileSaver.skipautonumber">true</boolProp>
              <boolProp name="FileSaver.skipsuffix">true</boolProp>
              <boolProp name="FileSaver.successonly">false</boolProp>
            </ResultSaver>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Upload files" enabled="true">
          <stringProp name="ForeachController.inputVal">upload</stringProp>
          <stringProp name="ForeachController.returnVal">coord</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
        </ForeachController>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="Upload Path Setup" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">def coord = vars.get(&quot;coord&quot;).split(&quot;:&quot;)
def gPath = coord[0].replace(&apos;.&apos;, &apos;/&apos;)
def a = coord[1]
def v = coord[2]

vars.put(&quot;g&quot;, coord[0])
vars.put(&quot;a&quot;, coord[1])
vars.put(&quot;v&quot;, coord[2])
vars.put(&quot;pomPath&quot;, &quot;${gPath}/${a}/${v}/${a}-${v}.pom&quot;)
vars.put(&quot;metadataPath&quot;, &quot;${gPath}/${a}/maven-metadata.xml&quot;)

</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT pom file" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;project&gt;&#xd;
  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&#xd;
  &lt;groupId&gt;${g}&lt;/groupId&gt;&#xd;
  &lt;artifactId&gt;${a}&lt;/artifactId&gt;&#xd;
  &lt;version&gt;${v}&lt;/version&gt;&#xd;
  &lt;packaging&gt;pom&lt;/packaging&gt;&#xd;
&lt;/project&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/content/maven/group/test-${repoCounter}/${pomPath}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="Pom upload Prometheus Listener" enabled="false">
              <collectionProp name="prometheus.collector_definitions">
                <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                  <stringProp name="collector.help">default help string</stringProp>
                  <stringProp name="collector.metric_name">indy_up_pom_count_total</stringProp>
                  <stringProp name="collector.type">COUNTER</stringProp>
                  <collectionProp name="collector.labels">
                    <stringProp name="102727412">label</stringProp>
                  </collectionProp>
                  <stringProp name="collector.quantiles_or_buckets"></stringProp>
                  <stringProp name="listener.collector.measuring">CountTotal</stringProp>
                </elementProp>
                <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                  <stringProp name="collector.help">default help string</stringProp>
                  <stringProp name="collector.metric_name">indy_up_pom_success_ratio</stringProp>
                  <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
                  <collectionProp name="collector.labels">
                    <stringProp name="102727412">label</stringProp>
                  </collectionProp>
                  <stringProp name="collector.quantiles_or_buckets"></stringProp>
                  <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
                </elementProp>
              </collectionProp>
            </com.github.johrstrom.listener.PrometheusListener>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT metadata file" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;metadata&gt;&#xd;
  &lt;groupId&gt;${g}&lt;/groupId&gt;&#xd;
  &lt;artifactId&gt;${a}&lt;/artifactId&gt;&#xd;
  &lt;versioning&gt;&#xd;
    &lt;latest&gt;${v}&lt;/latest&gt;&#xd;
    &lt;release&gt;${v}&lt;/release&gt;&#xd;
    &lt;versions&gt;&#xd;
      &lt;version&gt;${v}&lt;/version&gt;&#xd;
    &lt;/versions&gt;&#xd;
  &lt;/versioning&gt;&#xd;
  &lt;lastUpdated&gt;20160418214319&lt;/lastUpdated&gt;&#xd;
&lt;/metadata&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/content/maven/group/test-${repoCounter}/${metadataPath}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="metadata upload Prometheus Listener" enabled="false">
              <collectionProp name="prometheus.collector_definitions">
                <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                  <stringProp name="collector.help">default help string</stringProp>
                  <stringProp name="collector.metric_name">indy_up_meta_count_total</stringProp>
                  <stringProp name="collector.type">COUNTER</stringProp>
                  <collectionProp name="collector.labels">
                    <stringProp name="102727412">label</stringProp>
                  </collectionProp>
                  <stringProp name="collector.quantiles_or_buckets"></stringProp>
                  <stringProp name="listener.collector.measuring">CountTotal</stringProp>
                </elementProp>
                <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                  <stringProp name="collector.help">default help string</stringProp>
                  <stringProp name="collector.metric_name">indy_up_meta_success_ratio</stringProp>
                  <stringProp name="collector.type">COUNTER</stringProp>
                  <collectionProp name="collector.labels">
                    <stringProp name="102727412">label</stringProp>
                  </collectionProp>
                  <stringProp name="collector.quantiles_or_buckets"></stringProp>
                </elementProp>
              </collectionProp>
            </com.github.johrstrom.listener.PrometheusListener>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Retrieve build-group metadata file" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/content/maven/group/test-${repoCounter}/${metadataPath}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="Upload Prometheus Listener" enabled="true">
            <collectionProp name="prometheus.collector_definitions">
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">measuring indy response time of download artifact</stringProp>
                <stringProp name="collector.metric_name">indy_up_rt_hist</stringProp>
                <stringProp name="collector.type">HISTOGRAM</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="102727412">label</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
                <stringProp name="listener.collector.listen_to">samples</stringProp>
                <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
              </elementProp>
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">meaturing indy success response ratio</stringProp>
                <stringProp name="collector.metric_name">indy_up_response_success_ratio</stringProp>
                <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="102727412">label</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
                <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
                <stringProp name="listener.collector.listen_to">samples</stringProp>
              </elementProp>
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">indy total number of success request a artifact</stringProp>
                <stringProp name="collector.metric_name">indy_up_success_total</stringProp>
                <stringProp name="collector.type">COUNTER</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="102727412">label</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets"></stringProp>
                <stringProp name="listener.collector.measuring">SuccessTotal</stringProp>
              </elementProp>
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">default help string</stringProp>
                <stringProp name="collector.metric_name">indy_up_rt_summary</stringProp>
                <stringProp name="collector.type">SUMMARY</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="102727412">label</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
                <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
              </elementProp>
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">default help string</stringProp>
                <stringProp name="collector.metric_name">indy_up_latency</stringProp>
                <stringProp name="collector.type">HISTOGRAM</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="102727412">label</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
                <stringProp name="listener.collector.measuring">Latency</stringProp>
              </elementProp>
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">default help string</stringProp>
                <stringProp name="collector.metric_name">indy_up_count_total</stringProp>
                <stringProp name="collector.type">COUNTER</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="102727412">label</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets"></stringProp>
                <stringProp name="listener.collector.listen_to">samples</stringProp>
                <stringProp name="listener.collector.measuring">CountTotal</stringProp>
              </elementProp>
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">default help string</stringProp>
                <stringProp name="collector.metric_name">indy_up_response_size</stringProp>
                <stringProp name="collector.type">HISTOGRAM</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="102727412">label</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
                <stringProp name="listener.collector.measuring">ResponseSize</stringProp>
              </elementProp>
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">default help string</stringProp>
                <stringProp name="collector.metric_name">indy_up_idle_time</stringProp>
                <stringProp name="collector.type">SUMMARY</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="102727412">label</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
                <stringProp name="listener.collector.measuring">IdleTime</stringProp>
              </elementProp>
            </collectionProp>
          </com.github.johrstrom.listener.PrometheusListener>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Promote Build Output" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;source&quot;:&quot;hosted:test-${repoCounter}&quot;,&#xd;
	&quot;targetGroup&quot;:&quot;public&quot;,&#xd;
	&quot;dryRun&quot;:false&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/promotion/groups/promote</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Retrieve public group membership" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/admin/group/public</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Teardown hosts" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/admin/stores/maven/hosted/test-${repoCounter}?deleteContent=true</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Teardown group" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/admin/stores/maven/group/test-${repoCounter}?deleteContent=true</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import java.io.File

new File( vars.get(&quot;downloadDir&quot;), vars.get(&quot;repoCounter&quot;)).deleteDir()</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223PostProcessor>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">${inputDir}/../aggregate-report.log</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
